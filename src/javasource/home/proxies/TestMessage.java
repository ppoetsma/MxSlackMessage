// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package home.proxies;

public class TestMessage
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject testMessageMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Home.TestMessage";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Message("Message"),
		Response("Response"),
		URL("URL"),
		SendBy("SendBy"),
		SendAsync("SendAsync"),
		TestMessage_IncomingWebhook("Home.TestMessage_IncomingWebhook");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public TestMessage(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Home.TestMessage"));
	}

	protected TestMessage(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject testMessageMendixObject)
	{
		if (testMessageMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Home.TestMessage", testMessageMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Home.TestMessage");

		this.testMessageMendixObject = testMessageMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'TestMessage.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static home.proxies.TestMessage initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return home.proxies.TestMessage.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static home.proxies.TestMessage initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new home.proxies.TestMessage(context, mendixObject);
	}

	public static home.proxies.TestMessage load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return home.proxies.TestMessage.initialize(context, mendixObject);
	}

	public static java.util.List<home.proxies.TestMessage> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<home.proxies.TestMessage> result = new java.util.ArrayList<home.proxies.TestMessage>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Home.TestMessage" + xpathConstraint))
			result.add(home.proxies.TestMessage.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Message
	 */
	public final java.lang.String getMessage()
	{
		return getMessage(getContext());
	}

	/**
	 * @param context
	 * @return value of Message
	 */
	public final java.lang.String getMessage(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Message.toString());
	}

	/**
	 * Set value of Message
	 * @param message
	 */
	public final void setMessage(java.lang.String message)
	{
		setMessage(getContext(), message);
	}

	/**
	 * Set value of Message
	 * @param context
	 * @param message
	 */
	public final void setMessage(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String message)
	{
		getMendixObject().setValue(context, MemberNames.Message.toString(), message);
	}

	/**
	 * @return value of Response
	 */
	public final java.lang.String getResponse()
	{
		return getResponse(getContext());
	}

	/**
	 * @param context
	 * @return value of Response
	 */
	public final java.lang.String getResponse(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Response.toString());
	}

	/**
	 * Set value of Response
	 * @param response
	 */
	public final void setResponse(java.lang.String response)
	{
		setResponse(getContext(), response);
	}

	/**
	 * Set value of Response
	 * @param context
	 * @param response
	 */
	public final void setResponse(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String response)
	{
		getMendixObject().setValue(context, MemberNames.Response.toString(), response);
	}

	/**
	 * @return value of URL
	 */
	public final java.lang.String getURL()
	{
		return getURL(getContext());
	}

	/**
	 * @param context
	 * @return value of URL
	 */
	public final java.lang.String getURL(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.URL.toString());
	}

	/**
	 * Set value of URL
	 * @param url
	 */
	public final void setURL(java.lang.String url)
	{
		setURL(getContext(), url);
	}

	/**
	 * Set value of URL
	 * @param context
	 * @param url
	 */
	public final void setURL(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String url)
	{
		getMendixObject().setValue(context, MemberNames.URL.toString(), url);
	}

	/**
	 * Set value of SendBy
	 * @param sendby
	 */
	public final slackmessage.proxies.Enum_IncomingWebhook_Type getSendBy()
	{
		return getSendBy(getContext());
	}

	/**
	 * @param context
	 * @return value of SendBy
	 */
	public final slackmessage.proxies.Enum_IncomingWebhook_Type getSendBy(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.SendBy.toString());
		if (obj == null)
			return null;

		return slackmessage.proxies.Enum_IncomingWebhook_Type.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of SendBy
	 * @param sendby
	 */
	public final void setSendBy(slackmessage.proxies.Enum_IncomingWebhook_Type sendby)
	{
		setSendBy(getContext(), sendby);
	}

	/**
	 * Set value of SendBy
	 * @param context
	 * @param sendby
	 */
	public final void setSendBy(com.mendix.systemwideinterfaces.core.IContext context, slackmessage.proxies.Enum_IncomingWebhook_Type sendby)
	{
		if (sendby != null)
			getMendixObject().setValue(context, MemberNames.SendBy.toString(), sendby.toString());
		else
			getMendixObject().setValue(context, MemberNames.SendBy.toString(), null);
	}

	/**
	 * @return value of SendAsync
	 */
	public final java.lang.Boolean getSendAsync()
	{
		return getSendAsync(getContext());
	}

	/**
	 * @param context
	 * @return value of SendAsync
	 */
	public final java.lang.Boolean getSendAsync(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.SendAsync.toString());
	}

	/**
	 * Set value of SendAsync
	 * @param sendasync
	 */
	public final void setSendAsync(java.lang.Boolean sendasync)
	{
		setSendAsync(getContext(), sendasync);
	}

	/**
	 * Set value of SendAsync
	 * @param context
	 * @param sendasync
	 */
	public final void setSendAsync(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean sendasync)
	{
		getMendixObject().setValue(context, MemberNames.SendAsync.toString(), sendasync);
	}

	/**
	 * @return value of TestMessage_IncomingWebhook
	 */
	public final slackmessage.proxies.IncomingWebhook getTestMessage_IncomingWebhook() throws com.mendix.core.CoreException
	{
		return getTestMessage_IncomingWebhook(getContext());
	}

	/**
	 * @param context
	 * @return value of TestMessage_IncomingWebhook
	 */
	public final slackmessage.proxies.IncomingWebhook getTestMessage_IncomingWebhook(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		slackmessage.proxies.IncomingWebhook result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.TestMessage_IncomingWebhook.toString());
		if (identifier != null)
			result = slackmessage.proxies.IncomingWebhook.load(context, identifier);
		return result;
	}

	/**
	 * Set value of TestMessage_IncomingWebhook
	 * @param testmessage_incomingwebhook
	 */
	public final void setTestMessage_IncomingWebhook(slackmessage.proxies.IncomingWebhook testmessage_incomingwebhook)
	{
		setTestMessage_IncomingWebhook(getContext(), testmessage_incomingwebhook);
	}

	/**
	 * Set value of TestMessage_IncomingWebhook
	 * @param context
	 * @param testmessage_incomingwebhook
	 */
	public final void setTestMessage_IncomingWebhook(com.mendix.systemwideinterfaces.core.IContext context, slackmessage.proxies.IncomingWebhook testmessage_incomingwebhook)
	{
		if (testmessage_incomingwebhook == null)
			getMendixObject().setValue(context, MemberNames.TestMessage_IncomingWebhook.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.TestMessage_IncomingWebhook.toString(), testmessage_incomingwebhook.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return testMessageMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final home.proxies.TestMessage that = (home.proxies.TestMessage) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Home.TestMessage";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
