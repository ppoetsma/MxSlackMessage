// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package slackmessage.proxies;

public class Block
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject blockMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "SlackMessage.Block";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		BlockType("BlockType"),
		MessageText_Block("SlackMessage.MessageText_Block"),
		Block_Blocks("SlackMessage.Block_Blocks");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Block(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "SlackMessage.Block"));
	}

	protected Block(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject blockMendixObject)
	{
		if (blockMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("SlackMessage.Block", blockMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a SlackMessage.Block");

		this.blockMendixObject = blockMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Block.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static slackmessage.proxies.Block initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return slackmessage.proxies.Block.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static slackmessage.proxies.Block initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new slackmessage.proxies.Block(context, mendixObject);
	}

	public static slackmessage.proxies.Block load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return slackmessage.proxies.Block.initialize(context, mendixObject);
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * Set value of BlockType
	 * @param blocktype
	 */
	public final slackmessage.proxies.Enum_BlockType getBlockType()
	{
		return getBlockType(getContext());
	}

	/**
	 * @param context
	 * @return value of BlockType
	 */
	public final slackmessage.proxies.Enum_BlockType getBlockType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.BlockType.toString());
		if (obj == null)
			return null;

		return slackmessage.proxies.Enum_BlockType.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of BlockType
	 * @param blocktype
	 */
	public final void setBlockType(slackmessage.proxies.Enum_BlockType blocktype)
	{
		setBlockType(getContext(), blocktype);
	}

	/**
	 * Set value of BlockType
	 * @param context
	 * @param blocktype
	 */
	public final void setBlockType(com.mendix.systemwideinterfaces.core.IContext context, slackmessage.proxies.Enum_BlockType blocktype)
	{
		if (blocktype != null)
			getMendixObject().setValue(context, MemberNames.BlockType.toString(), blocktype.toString());
		else
			getMendixObject().setValue(context, MemberNames.BlockType.toString(), null);
	}

	/**
	 * @return value of MessageText_Block
	 */
	public final slackmessage.proxies.MessageText getMessageText_Block() throws com.mendix.core.CoreException
	{
		return getMessageText_Block(getContext());
	}

	/**
	 * @param context
	 * @return value of MessageText_Block
	 */
	public final slackmessage.proxies.MessageText getMessageText_Block(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		slackmessage.proxies.MessageText result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.MessageText_Block.toString());
		if (identifier != null)
			result = slackmessage.proxies.MessageText.load(context, identifier);
		return result;
	}

	/**
	 * Set value of MessageText_Block
	 * @param messagetext_block
	 */
	public final void setMessageText_Block(slackmessage.proxies.MessageText messagetext_block)
	{
		setMessageText_Block(getContext(), messagetext_block);
	}

	/**
	 * Set value of MessageText_Block
	 * @param context
	 * @param messagetext_block
	 */
	public final void setMessageText_Block(com.mendix.systemwideinterfaces.core.IContext context, slackmessage.proxies.MessageText messagetext_block)
	{
		if (messagetext_block == null)
			getMendixObject().setValue(context, MemberNames.MessageText_Block.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.MessageText_Block.toString(), messagetext_block.getMendixObject().getId());
	}

	/**
	 * @return value of Block_Blocks
	 */
	public final slackmessage.proxies.Blocks getBlock_Blocks() throws com.mendix.core.CoreException
	{
		return getBlock_Blocks(getContext());
	}

	/**
	 * @param context
	 * @return value of Block_Blocks
	 */
	public final slackmessage.proxies.Blocks getBlock_Blocks(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		slackmessage.proxies.Blocks result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Block_Blocks.toString());
		if (identifier != null)
			result = slackmessage.proxies.Blocks.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Block_Blocks
	 * @param block_blocks
	 */
	public final void setBlock_Blocks(slackmessage.proxies.Blocks block_blocks)
	{
		setBlock_Blocks(getContext(), block_blocks);
	}

	/**
	 * Set value of Block_Blocks
	 * @param context
	 * @param block_blocks
	 */
	public final void setBlock_Blocks(com.mendix.systemwideinterfaces.core.IContext context, slackmessage.proxies.Blocks block_blocks)
	{
		if (block_blocks == null)
			getMendixObject().setValue(context, MemberNames.Block_Blocks.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Block_Blocks.toString(), block_blocks.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return blockMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final slackmessage.proxies.Block that = (slackmessage.proxies.Block) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "SlackMessage.Block";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
